name: Node CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.3.0"
      - name: Cache ripgrep binary
        id: cache-ripgrep
        uses: actions/cache@v3
        env:
          cache-name: cache-ripgrep
        with:
          # caching ripgrep
          path: |
            .cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: |
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: npm ci
        run: npm ci
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        env:
          XDG_CACHE_HOME: .cache
      - name: run postinstall
        run: npm run postinstall
        if: steps.cache-nodemodules.outputs.cache-hit == 'true'
        env:
          XDG_CACHE_HOME: .cache
      - run: npm test
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
        if: matrix.os == 'ubuntu-latest'
